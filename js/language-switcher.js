document.addEventListener('DOMContentLoaded',function(){const translations={ar:null,en:null};let currentLang=localStorage.getItem('language')||'ar';async function loadTranslations(){try{const arResponse=await fetch('/locales/ar/translation.json');const enResponse=await fetch('/locales/en/translation.json');translations.ar=await arResponse.json();translations.en=await enResponse.json();applyTranslation(currentLang);updateUI(currentLang);document.body.classList.add('language-loaded')}catch(error){console.error('Error loading translations:',error)}}
function applyTranslation(lang){if(!translations[lang]){console.error(`Translation for ${lang} not loaded yet.`);return}
document.querySelectorAll('[data-i18n]').forEach(element=>{const key=element.getAttribute('data-i18n');const translation=getNestedTranslation(translations[lang],key);if(translation){if(element.tagName==='INPUT'&&element.getAttribute('type')==='text'||element.tagName==='INPUT'&&element.getAttribute('type')==='email'||element.tagName==='TEXTAREA'){element.placeholder=translation}else if(element.tagName==='IMG'&&element.hasAttribute('alt')){element.alt=translation}else if(element.tagName==='META'&&element.hasAttribute('content')){element.content=translation}else{element.textContent=translation}}});const titleKey=document.documentElement.getAttribute('data-i18n-title');if(titleKey){const titleTranslation=getNestedTranslation(translations[lang],titleKey);if(titleTranslation){document.title=titleTranslation}}
document.querySelectorAll('[data-i18n-attr]').forEach(element=>{const attrData=element.getAttribute('data-i18n-attr').split(',');attrData.forEach(item=>{const[attr,key]=item.trim().split(':');if(attr&&key){const translation=getNestedTranslation(translations[lang],key);if(translation){element.setAttribute(attr,translation)}}})});document.documentElement.dir=lang==='ar'?'rtl':'ltr';document.documentElement.lang=lang}
function getNestedTranslation(obj,path){const keys=path.split('.');let result=obj;for(const key of keys){if(result&&typeof result==='object'&&key in result){result=result[key]}else{return null}}
return result}
function updateUI(lang){const langToggle=document.getElementById('language-toggle');const mobileLangToggle=document.getElementById('mobile-language-toggle');if(langToggle){updateLanguageToggle(langToggle,lang)}
if(mobileLangToggle){updateLanguageToggle(mobileLangToggle,lang)}
document.body.classList.remove('lang-ar','lang-en');document.body.classList.add(`lang-${lang}`);const rtlSpecificElements=document.querySelectorAll('.rtl-specific');rtlSpecificElements.forEach(element=>{if(lang==='ar'){element.classList.add('rtl-active')}else{element.classList.remove('rtl-active')}});if(lang==='ar'){document.body.style.fontFamily='var(--font-body-ar)'}else{document.body.style.fontFamily='var(--font-body-en)'}}
function updateLanguageToggle(button,currentLang){const oppositeLanguage=currentLang==='ar'?'en':'ar';const textSpan=button.querySelector('span');if(textSpan){textSpan.textContent=translations[currentLang]?.common?.language?.[oppositeLanguage]||(oppositeLanguage==='ar'?'العربية':'English')}
button.setAttribute('data-lang',oppositeLanguage)}
function toggleLanguage(event){const targetLang=event.currentTarget.getAttribute('data-lang');if(targetLang&&(targetLang==='ar'||targetLang==='en')){currentLang=targetLang;localStorage.setItem('language',currentLang);document.body.classList.add('language-transition');setTimeout(()=>{applyTranslation(currentLang);updateUI(currentLang);document.body.classList.remove('language-transition');animateTranslationChange()},300);createLanguageToggleEffect(event)}}
function createLanguageToggleEffect(event){const toggleButton=event.currentTarget;const rect=toggleButton.getBoundingClientRect();const x=rect.left+rect.width/2;const y=rect.top+rect.height/2;const starburst=document.createElement('div');starburst.classList.add('language-toggle-effect');starburst.style.left=`${x}px`;starburst.style.top=`${y}px`;document.body.appendChild(starburst);setTimeout(()=>{starburst.remove()},1500)}
function animateTranslationChange(){const elements=document.querySelectorAll('.animate-on-language-change');elements.forEach((element,index)=>{element.style.animation='none';element.offsetHeight;element.style.animation=`fadeInTranslation 0.5s ease forwards ${index * 0.1}s`})}
function addLanguageToggleListeners(){const languageToggle=document.getElementById('language-toggle');const mobileLanguageToggle=document.getElementById('mobile-language-toggle');if(languageToggle){languageToggle.addEventListener('click',toggleLanguage)}
if(mobileLanguageToggle){mobileLanguageToggle.addEventListener('click',toggleLanguage)}}
loadTranslations();addLanguageToggleListeners();window.i18n={getCurrentLanguage:()=>currentLang,translate:(key)=>getNestedTranslation(translations[currentLang],key),changeLanguage:(lang)=>{if(lang==='ar'||lang==='en'){currentLang=lang;localStorage.setItem('language',currentLang);applyTranslation(currentLang);updateUI(currentLang)}}}})