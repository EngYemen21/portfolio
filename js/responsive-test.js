document.addEventListener('DOMContentLoaded',function(){testResponsiveness();testBrowserCompatibility();enhanceUserExperience()});function testResponsiveness(){const screenWidth=window.innerWidth;const screenHeight=window.innerHeight;console.log(`اختبار التجاوب: حجم الشاشة الحالي ${screenWidth}x${screenHeight}`);let screenSizeClass='';if(screenWidth<576){screenSizeClass='xs'}else if(screenWidth<768){screenSizeClass='sm'}else if(screenWidth<992){screenSizeClass='md'}else if(screenWidth<1200){screenSizeClass='lg'}else{screenSizeClass='xl'}
document.body.classList.add(`screen-${screenSizeClass}`);adjustLargeElements(screenSizeClass);adjustAnimations(screenSizeClass);window.addEventListener('resize',function(){testResponsiveness()})}
function adjustLargeElements(screenSizeClass){const images=document.querySelectorAll('img');images.forEach(img=>{img.style.maxWidth='100%';if(screenSizeClass==='xs'||screenSizeClass==='sm'){const smallerSrc=img.getAttribute('data-small-src');if(smallerSrc){img.setAttribute('src',smallerSrc)}}});const decorativeElements=document.querySelectorAll('.planet, .galaxy-effect');decorativeElements.forEach(element=>{if(screenSizeClass==='xs'){element.style.transform='scale(0.6)'}else if(screenSizeClass==='sm'){element.style.transform='scale(0.8)'}else{element.style.transform='scale(1)'}})}
function adjustAnimations(screenSizeClass){if(screenSizeClass==='xs'||screenSizeClass==='sm'){reduceParticlesCount();disableHeavyEffects()}else{enableAllEffects()}}
function reduceParticlesCount(){const starsContainers=document.querySelectorAll('.stars-container');starsContainers.forEach(container=>{const stars=container.querySelectorAll('.star');for(let i=0;i<stars.length;i++){if(i%3!==0){stars[i].style.display='none'}}});const dustContainers=document.querySelectorAll('.cosmic-dust-container');dustContainers.forEach(container=>{const dustParticles=container.querySelectorAll('.cosmic-dust');for(let i=0;i<dustParticles.length;i++){if(i%2!==0){dustParticles[i].style.display='none'}}})}
function disableHeavyEffects(){const cosmicFogs=document.querySelectorAll('.cosmic-fog');cosmicFogs.forEach(fog=>{fog.style.display='none'});const hologramEffects=document.querySelectorAll('.hologram-effect');hologramEffects.forEach(effect=>{effect.classList.remove('hologram-effect')});const cards3d=document.querySelectorAll('.card-3d');cards3d.forEach(card=>{card.classList.remove('card-3d');card.classList.add('card-simple')})}
function enableAllEffects(){const stars=document.querySelectorAll('.star');stars.forEach(star=>{star.style.display=''});const dustParticles=document.querySelectorAll('.cosmic-dust');dustParticles.forEach(particle=>{particle.style.display=''});const cosmicFogs=document.querySelectorAll('.cosmic-fog');cosmicFogs.forEach(fog=>{fog.style.display=''})}
function testBrowserCompatibility(){const userAgent=navigator.userAgent;let browserType='unknown';if(userAgent.indexOf('Chrome')>-1){browserType='chrome'}else if(userAgent.indexOf('Safari')>-1){browserType='safari'}else if(userAgent.indexOf('Firefox')>-1){browserType='firefox'}else if(userAgent.indexOf('MSIE')>-1||userAgent.indexOf('Trident')>-1){browserType='ie'}else if(userAgent.indexOf('Edge')>-1){browserType='edge'}
console.log(`اختبار التوافق: المتصفح المكتشف هو ${browserType}`);document.body.classList.add(`browser-${browserType}`);applyBrowserFixes(browserType)}
function applyBrowserFixes(browserType){if(browserType==='safari'){const elementsWithFilters=document.querySelectorAll('.galaxy-effect, .cosmic-fog');elementsWithFilters.forEach(element=>{element.style.webkitFilter=element.style.filter});const elementsWithGradients=document.querySelectorAll('[class*="gradient"]');elementsWithGradients.forEach(element=>{const computedStyle=window.getComputedStyle(element);const background=computedStyle.getPropertyValue('background-image');if(background.includes('gradient')){element.style.webkitBackgroundImage=background}})}
if(browserType==='ie'){const advancedEffects=document.querySelectorAll('.text-gradient, .hologram-effect, .wave-background');advancedEffects.forEach(element=>{element.classList.add('ie-simplified')});loadPolyfills()}
if(browserType==='firefox'){const animations=document.querySelectorAll('[class*="animate-"]');animations.forEach(element=>{element.style.animationFillMode='forwards'})}}
function loadPolyfills(){if(!window.CSS||!window.CSS.supports||!window.CSS.supports('--a','0')){const script=document.createElement('script');script.src='https://cdn.jsdelivr.net/npm/css-vars-ponyfill@2';script.onload=function(){cssVars({})};document.head.appendChild(script)}
if(!('IntersectionObserver' in window)){const script=document.createElement('script');script.src='https://cdn.jsdelivr.net/npm/intersection-observer@0.12.0/intersection-observer.js';document.head.appendChild(script)}}
function enhanceUserExperience(){optimizeLoadingTimes();enhanceAccessibility();enhanceInteractivity()}
function optimizeLoadingTimes(){const images=document.querySelectorAll('img[data-src]');if('IntersectionObserver' in window){const imageObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){const img=entry.target;img.src=img.getAttribute('data-src');img.removeAttribute('data-src');imageObserver.unobserve(img)}})});images.forEach(img=>{imageObserver.observe(img)})}else{images.forEach(img=>{img.src=img.getAttribute('data-src');img.removeAttribute('data-src')})}
optimizeFontLoading()}
function optimizeFontLoading(){if(!document.querySelector('link[rel="preconnect"][href="https://fonts.googleapis.com"]')){const preconnectGoogle=document.createElement('link');preconnectGoogle.rel='preconnect';preconnectGoogle.href='https://fonts.googleapis.com';document.head.appendChild(preconnectGoogle);const preconnectGstatic=document.createElement('link');preconnectGstatic.rel='preconnect';preconnectGstatic.href='https://fonts.gstatic.com';preconnectGstatic.crossOrigin='anonymous';document.head.appendChild(preconnectGstatic)}}
function enhanceAccessibility(){const interactiveElements=document.querySelectorAll('button, a, input, select, textarea');interactiveElements.forEach(element=>{if(element.tagName==='BUTTON'&&!element.getAttribute('aria-label')&&element.textContent.trim()===''){const iconElement=element.querySelector('i[class*="fa-"]');if(iconElement){const iconClass=Array.from(iconElement.classList).find(cls=>cls.startsWith('fa-'));if(iconClass){const iconName=iconClass.replace('fa-','');element.setAttribute('aria-label',iconName)}}}
if(element.tagName==='A'&&!element.getAttribute('aria-label')&&element.textContent.trim()===''){element.setAttribute('aria-label',element.getAttribute('href')||'رابط')}});enhanceColorContrast()}
function enhanceColorContrast(){const textElements=document.querySelectorAll('p, h1, h2, h3, h4, h5, h6, a, button, span, label');textElements.forEach(element=>{const computedStyle=window.getComputedStyle(element);const backgroundColor=computedStyle.backgroundColor;const color=computedStyle.color;const bgRGB=getRGBValues(backgroundColor);const textRGB=getRGBValues(color);if(bgRGB&&textRGB){const contrast=calculateContrast(bgRGB,textRGB);if(contrast<4.5){element.classList.add('enhanced-contrast')}}})}
function getRGBValues(colorString){if(!colorString||colorString==='transparent'||colorString==='rgba(0, 0, 0, 0)'){return null}
const rgbMatch=colorString.match(/rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*[\d.]+)?\)/);if(rgbMatch){return{r:parseInt(rgbMatch[1]),g:parseInt(rgbMatch[2]),b:parseInt(rgbMatch[3])}}
return null}
function calculateContrast(rgb1,rgb2){const luminance1=calculateLuminance(rgb1);const luminance2=calculateLuminance(rgb2);const brighter=Math.max(luminance1,luminance2);const darker=Math.min(luminance1,luminance2);return(brighter+0.05)/(darker+0.05)}
function calculateLuminance(rgb){const{r,g,b}=rgb;const rsrgb=r/255;const gsrgb=g/255;const bsrgb=b/255;const r1=rsrgb<=0.03928?rsrgb/12.92:Math.pow((rsrgb+0.055)/1.055,2.4);const g1=gsrgb<=0.03928?gsrgb/12.92:Math.pow((gsrgb+0.055)/1.055,2.4);const b1=bsrgb<=0.03928?bsrgb/12.92:Math.pow((bsrgb+0.055)/1.055,2.4);return 0.2126*r1+0.7152*g1+0.0722*b1}
function enhanceInteractivity(){const buttons=document.querySelectorAll('button, .btn-primary, .btn-secondary, .btn-outline');buttons.forEach(button=>{button.addEventListener('mouseenter',function(){this.classList.add('hover-effect')});button.addEventListener('mouseleave',function(){this.classList.remove('hover-effect')});button.addEventListener('click',function(){this.classList.add('click-effect');setTimeout(()=>{this.classList.remove('click-effect')},300)})});enhanceFormInteraction()}
function enhanceFormInteraction(){const formInputs=document.querySelectorAll('input, textarea, select');formInputs.forEach(input=>{input.addEventListener('focus',function(){this.parentElement.classList.add('input-focused')});input.addEventListener('blur',function(){this.parentElement.classList.remove('input-focused');if(this.value.trim()!==''){this.classList.add('input-filled')}else{this.classList.remove('input-filled')}});input.addEventListener('input',function(){validateInput(this)})});const forms=document.querySelectorAll('form');forms.forEach(form=>{form.addEventListener('submit',function(event){if(!validateForm(this)){event.preventDefault()}})})}
function validateInput(input){const existingError=input.parentElement.querySelector('.error-message');if(existingError){existingError.remove()}
let isValid=!0;let errorMessage='';if(input.hasAttribute('required')&&input.value.trim()===''){isValid=!1;errorMessage='هذا الحقل مطلوب'}else if(input.type==='email'&&input.value.trim()!==''){const emailRegex=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!emailRegex.test(input.value)){isValid=!1;errorMessage='يرجى إدخال بريد إلكتروني صحيح'}}else if(input.type==='tel'&&input.value.trim()!==''){const phoneRegex=/^\d{10,}$/;if(!phoneRegex.test(input.value.replace(/\D/g,''))){isValid=!1;errorMessage='يرجى إدخال رقم هاتف صحيح'}}
if(isValid){input.classList.remove('invalid');input.classList.add('valid')}else{input.classList.remove('valid');input.classList.add('invalid');const errorElement=document.createElement('div');errorElement.className='error-message';errorElement.textContent=errorMessage;input.parentElement.appendChild(errorElement)}
return isValid}
function validateForm(form){const inputs=form.querySelectorAll('input, textarea, select');let isFormValid=!0;inputs.forEach(input=>{if(!validateInput(input)){isFormValid=!1}});return isFormValid}